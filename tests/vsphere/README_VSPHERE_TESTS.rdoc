http://geemus.s3.amazonaws.com/fog.png

fog vsphere is the Ruby vsphere cloud computing library, top to bottom:

* Extend orginal reuqests to enpower fine-grained lifecycle management of virtual machines, flexible resource fetch, and configurations on disk/networking
* Extend collections to enable simplified compute service interface for vsphere cloud

== Verrsion description

  version = 1.3.1.serengeti.1

This version mainly ship latest changes on fog Vsphere cloud provider and do not conclude complete support or required dependency to all providers, which means you should download fog from github for cloud services of other cloud providers, like AMAZON, Rackspace, and so on.
This version extend original vsphere cloud with fine-grained control functions to help elegant lifecycle management of virtual machines, flexible resources fetch, and configs of disk/network.
This work is still undergoing, besides the powerful extensition on requests API, we are working on structure and enhance vsphere cloud services on efficent provisioning, resource placement, and storage/networking management.
Please feel free to touch us: (lxinhui@vmware.com, jxiao@vmware.com, whe@vmware.com)

== Getting Started

All the extentions provided are tested through against a pre-seting tests bed. Below are some clues to help set up this test bed.

The test bed is set up by vSphere 5.0, which consist of at least one host and related storage/networkig facilitites. Then, cluster. resource pool, datastore are setup.
Take our test bed as an example, more details can be exposed about the requiresments to set up a proper test bed..
  Datacenter: name - 'datacenter2012'
  Cluster: name - 'cluster-fog' which can enable HA and disable the feature
  ResourcePool: name - 'test' which contained by cluster of 'cluster-fog'
  Host: name - 'w1-vhadp-05.eng.vmware.com' which contained by cluster of 'cluster-fog'
  Datastore: number - 2, name - 'ds01'& 'ds02' which are accessible by host of 'w1-vhadp-05.eng.vmware.com'
  Virtual Machines: number - 5, name - 'node_clone_test_local', 'node_clone_test_remote', 'node_clone_test_2ds', 'node_network_test', 'node_ip_test'
  Distributed Switch: name - 'dvSwitch'
  Portgroup: name - 'wdc-hadp-pub1' and 'wdc-hadp-pub1'

All these vms are provisoned on host of 'w1-vhadp-05.eng.vmware.com'. There are some settings bound with each vm:
  'node_clone_test_local' - for clone test, adopt the same datastore with destination datastore. also used for tests of server/servers, power-on/off/reboot,query-resources and compute;
  'node_clone_test_remote' - for clone test, adopt a different datastore from destination datastore;
  'node_clone_test_2ds' - for clone test, adopt two datastore;
  'node_network_test' - for network update test, adopt the portgroup of 'wdc-hadp-pub1';
  'node_ip_test' - for ip setting test, which is innocent without any pre-setting of dns/ip. To run the tests needs help from network admin on avalaible static ip zone and dhcp/ds address.

For HA test, it will need enable both 'vSphere HA' and 'vSphere DRS'. By observing vm running under HA protection and without protection, effects caused by accident kill action will be compared.

It is also worth paying attention that vm of 'node_ip_test' contains special scripts to accept outside parameters and finish ip setting work in guest os. So do not use it for other unit tests.


== Consts Setting

Based on the test bed mentioned above, ConstClass is put into each test file to contain settings needed to run tests. Below is an example for vm_clone_tests.

  class ConstClass
      DC_NAME = 'Datacenter2012'# name of datacenter for test
      CS_NAME = 'cluster-fog' # cluster name of clone destination
      RP_NAME = 'test' # resource pool name of clone destination
      HOST_NAME = 'w1-vhadp-05.eng.vmware.com' # name of clone destination host
      DATASTORE_NAME = 'ds01' #  datastore name of clone destination
      RE_VM_NAME = 'node_clone_test_remote' # vm name to clone, which can not access destination datastore
      LC_VM_NAME = 'node_clone_test_local'# vm name to clone, which use the same datastore with destination
      DE_VM_NAME = 'node_clone_test_2ds'# name of a local vm/template to clone from and with two connected datastore
      RE_TEMPLATE = "/Datacenters/#{DC_NAME}/vm/#{RE_VM_NAME}" #path of a remote vm template to clone
      LC_TEMPLATE = "/Datacenters/#{DC_NAME}/vm/#{LC_VM_NAME}" #path of a local vm template to clone
      DE_TEMPLATE = "/Datacenters/#{DC_NAME}/vm/#{DE_VM_NAME}" #path of a 2-datastore, local vm template to clone
      CPUNUM = 2  # cpu core number
      MEMSIZE = 200 # memory size in Mb
    end

At the rest of code of each test, these consts are read out and used to fetch underlying variants which is not literally understanderable to common writers.
For example, name of a vm is put in constclass but will be trasformed into vm management object to run real imterfaces.


== Copyright

(The MIT License)

Copyright (c) 2010 {geemus (Wesley Beary)}[http://github.com/geemus]

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
